#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

usage() {
    cat <<END_DOC
USAGE:

  biotk bacterial-gc-content <species-name>

DESCRIPTION:

  Get mean GC-content of a bacterial species. Average over all the item
  found in the dataset. This might be roughly correct but gives a basic
  idea.

EXAMPLES:

    # display the mean gc content of all Escherichia genomes
    $ biotk bacterial-gc-content Escherichia
    # display the full annotation of all Escherichia genomes
    $ biotk bacterial-gc-content --full Escherichia
    # display the whole table
    $ biotk bacterial-gc-content --full ""

OPTIONS:

  --help: Display this help message
  --full: Display full dataset filtered for <species-name>

AUTHOR:

  Samuel Barreto, (2017-05-29)

END_DOC

    exit 0
}

expr "$*" : ".*--help" > /dev/null && usage
if [ $# -eq 0 ]; then > /dev/null && usage; fi

readonly LOG_FILE="/tmp/$(basename "$0").log"

info()    { echo -e "INFO:  $@"  | tee -a "$LOG_FILE" >&2 ; }
warn()    { echo -e "WARN:  $@"   | tee -a "$LOG_FILE" >&2 ; }
error()   { echo -e "ERROR: $@" | tee -a "$LOG_FILE" >&2 ; }
fatal()   { echo -e "FATAL: $@" | tee -a "$LOG_FILE" >&2 ; exit 1 ; }

cleanup() {
    rm -f "$LOG_FILE"
    unset _db _full
}

_db="$BIO_SOURCE_DIR/data/prokaryotes.tsv"

_head ()
{
    if expr "$*" : ".*--header" > /dev/null; then
        sed -n '1p' "${_db}" \
        | sed -e 's/^#//' \
        | cut -f -13;
    fi
}

_full ()
{
    _head "$*"
    sed '1d' "${_db}" \
        | awk -F'\t' "/${!#}/ {print}" \
        | cut -f -13
}

_mean ()
{
    awk -F'\t' \
        "/${!#}/{total += \$8; count++ } END { print total/count }" \
        "${_db}" \
        2> "$LOG_FILE" || \
        error "Species not found. (Hint: Species name are usually case sensitive.)"
}

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    trap cleanup EXIT

    if  expr "$*" : ".*--full" > /dev/null; then
        _full "$@"
    else
        _mean "$@"
    fi
fi
